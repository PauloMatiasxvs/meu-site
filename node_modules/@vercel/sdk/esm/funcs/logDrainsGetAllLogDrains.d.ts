import { VercelCore } from "../core.js";
import { RequestOptions } from "../lib/sdks.js";
import { GetAllLogDrainsRequest, GetAllLogDrainsResponseBody } from "../models/getalllogdrainsop.js";
import { ConnectionError, InvalidRequestError, RequestAbortedError, RequestTimeoutError, UnexpectedClientError } from "../models/httpclienterrors.js";
import { SDKError } from "../models/sdkerror.js";
import { SDKValidationError } from "../models/sdkvalidationerror.js";
import { VercelBadRequestError } from "../models/vercelbadrequesterror.js";
import { VercelForbiddenError } from "../models/vercelforbiddenerror.js";
import { Result } from "../types/fp.js";
/**
 * Retrieves a list of all the Log Drains
 *
 * @remarks
 * Retrieves a list of all the Log Drains owned by the account. This endpoint must be called with an account AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated account can be accessed.
 */
export declare function logDrainsGetAllLogDrains(client: VercelCore, request: GetAllLogDrainsRequest, options?: RequestOptions): Promise<Result<Array<GetAllLogDrainsResponseBody>, VercelBadRequestError | VercelForbiddenError | SDKError | SDKValidationError | UnexpectedClientError | InvalidRequestError | RequestAbortedError | RequestTimeoutError | ConnectionError>>;
//# sourceMappingURL=logDrainsGetAllLogDrains.d.ts.map