import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type Two5 = {};
export type Items2 = Two5 | string | number | boolean | any;
export type One5 = {};
export type Items1 = One5 | string | number | boolean | any;
export type Items = One5 | string | number | boolean | any | Array<Two5 | string | number | boolean | any>;
export type CreateEdgeConfigRequestBody = {
    slug: string;
    items?: {
        [k: string]: One5 | string | number | boolean | any | Array<Two5 | string | number | boolean | any>;
    } | undefined;
};
export type CreateEdgeConfigRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateEdgeConfigRequestBody;
};
/**
 * Keeps track of the current state of the Edge Config while it gets transferred.
 */
export type CreateEdgeConfigTransfer = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
export type CreateEdgeConfigSchema = {};
export declare const CreateEdgeConfigType: {
    readonly Flags: "flags";
};
export type CreateEdgeConfigType = ClosedEnum<typeof CreateEdgeConfigType>;
export type CreateEdgeConfigPurpose = {
    type: CreateEdgeConfigType;
    projectId: string;
};
/**
 * An Edge Config
 */
export type CreateEdgeConfigResponseBody = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    /**
     * Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
     */
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    /**
     * Keeps track of the current state of the Edge Config while it gets transferred.
     */
    transfer?: CreateEdgeConfigTransfer | undefined;
    schema?: CreateEdgeConfigSchema | undefined;
    purpose?: CreateEdgeConfigPurpose | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const Two5$inboundSchema: z.ZodType<Two5, z.ZodTypeDef, unknown>;
/** @internal */
export type Two5$Outbound = {};
/** @internal */
export declare const Two5$outboundSchema: z.ZodType<Two5$Outbound, z.ZodTypeDef, Two5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Two5$ {
    /** @deprecated use `Two5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Two5, z.ZodTypeDef, unknown>;
    /** @deprecated use `Two5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Two5$Outbound, z.ZodTypeDef, Two5>;
    /** @deprecated use `Two5$Outbound` instead. */
    type Outbound = Two5$Outbound;
}
export declare function two5ToJSON(two5: Two5): string;
export declare function two5FromJSON(jsonString: string): SafeParseResult<Two5, SDKValidationError>;
/** @internal */
export declare const Items2$inboundSchema: z.ZodType<Items2, z.ZodTypeDef, unknown>;
/** @internal */
export type Items2$Outbound = Two5$Outbound | string | number | boolean | any;
/** @internal */
export declare const Items2$outboundSchema: z.ZodType<Items2$Outbound, z.ZodTypeDef, Items2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Items2$ {
    /** @deprecated use `Items2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `Items2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `Items2$Outbound` instead. */
    type Outbound = Items2$Outbound;
}
export declare function items2ToJSON(items2: Items2): string;
export declare function items2FromJSON(jsonString: string): SafeParseResult<Items2, SDKValidationError>;
/** @internal */
export declare const One5$inboundSchema: z.ZodType<One5, z.ZodTypeDef, unknown>;
/** @internal */
export type One5$Outbound = {};
/** @internal */
export declare const One5$outboundSchema: z.ZodType<One5$Outbound, z.ZodTypeDef, One5>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace One5$ {
    /** @deprecated use `One5$inboundSchema` instead. */
    const inboundSchema: z.ZodType<One5, z.ZodTypeDef, unknown>;
    /** @deprecated use `One5$outboundSchema` instead. */
    const outboundSchema: z.ZodType<One5$Outbound, z.ZodTypeDef, One5>;
    /** @deprecated use `One5$Outbound` instead. */
    type Outbound = One5$Outbound;
}
export declare function one5ToJSON(one5: One5): string;
export declare function one5FromJSON(jsonString: string): SafeParseResult<One5, SDKValidationError>;
/** @internal */
export declare const Items1$inboundSchema: z.ZodType<Items1, z.ZodTypeDef, unknown>;
/** @internal */
export type Items1$Outbound = One5$Outbound | string | number | boolean | any;
/** @internal */
export declare const Items1$outboundSchema: z.ZodType<Items1$Outbound, z.ZodTypeDef, Items1>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Items1$ {
    /** @deprecated use `Items1$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `Items1$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `Items1$Outbound` instead. */
    type Outbound = Items1$Outbound;
}
export declare function items1ToJSON(items1: Items1): string;
export declare function items1FromJSON(jsonString: string): SafeParseResult<Items1, SDKValidationError>;
/** @internal */
export declare const Items$inboundSchema: z.ZodType<Items, z.ZodTypeDef, unknown>;
/** @internal */
export type Items$Outbound = One5$Outbound | string | number | boolean | any | Array<Two5$Outbound | string | number | boolean | any>;
/** @internal */
export declare const Items$outboundSchema: z.ZodType<Items$Outbound, z.ZodTypeDef, Items>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Items$ {
    /** @deprecated use `Items$inboundSchema` instead. */
    const inboundSchema: z.ZodType<any, z.ZodTypeDef, unknown>;
    /** @deprecated use `Items$outboundSchema` instead. */
    const outboundSchema: z.ZodType<any, z.ZodTypeDef, any>;
    /** @deprecated use `Items$Outbound` instead. */
    type Outbound = Items$Outbound;
}
export declare function itemsToJSON(items: Items): string;
export declare function itemsFromJSON(jsonString: string): SafeParseResult<Items, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigRequestBody$inboundSchema: z.ZodType<CreateEdgeConfigRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigRequestBody$Outbound = {
    slug: string;
    items?: {
        [k: string]: One5$Outbound | string | number | boolean | any | Array<Two5$Outbound | string | number | boolean | any>;
    } | undefined;
};
/** @internal */
export declare const CreateEdgeConfigRequestBody$outboundSchema: z.ZodType<CreateEdgeConfigRequestBody$Outbound, z.ZodTypeDef, CreateEdgeConfigRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigRequestBody$ {
    /** @deprecated use `CreateEdgeConfigRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigRequestBody$Outbound, z.ZodTypeDef, CreateEdgeConfigRequestBody>;
    /** @deprecated use `CreateEdgeConfigRequestBody$Outbound` instead. */
    type Outbound = CreateEdgeConfigRequestBody$Outbound;
}
export declare function createEdgeConfigRequestBodyToJSON(createEdgeConfigRequestBody: CreateEdgeConfigRequestBody): string;
export declare function createEdgeConfigRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigRequest$inboundSchema: z.ZodType<CreateEdgeConfigRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigRequest$Outbound = {
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateEdgeConfigRequestBody$Outbound;
};
/** @internal */
export declare const CreateEdgeConfigRequest$outboundSchema: z.ZodType<CreateEdgeConfigRequest$Outbound, z.ZodTypeDef, CreateEdgeConfigRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigRequest$ {
    /** @deprecated use `CreateEdgeConfigRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigRequest$Outbound, z.ZodTypeDef, CreateEdgeConfigRequest>;
    /** @deprecated use `CreateEdgeConfigRequest$Outbound` instead. */
    type Outbound = CreateEdgeConfigRequest$Outbound;
}
export declare function createEdgeConfigRequestToJSON(createEdgeConfigRequest: CreateEdgeConfigRequest): string;
export declare function createEdgeConfigRequestFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigRequest, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigTransfer$inboundSchema: z.ZodType<CreateEdgeConfigTransfer, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigTransfer$Outbound = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
/** @internal */
export declare const CreateEdgeConfigTransfer$outboundSchema: z.ZodType<CreateEdgeConfigTransfer$Outbound, z.ZodTypeDef, CreateEdgeConfigTransfer>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigTransfer$ {
    /** @deprecated use `CreateEdgeConfigTransfer$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigTransfer, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigTransfer$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigTransfer$Outbound, z.ZodTypeDef, CreateEdgeConfigTransfer>;
    /** @deprecated use `CreateEdgeConfigTransfer$Outbound` instead. */
    type Outbound = CreateEdgeConfigTransfer$Outbound;
}
export declare function createEdgeConfigTransferToJSON(createEdgeConfigTransfer: CreateEdgeConfigTransfer): string;
export declare function createEdgeConfigTransferFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigTransfer, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigSchema$inboundSchema: z.ZodType<CreateEdgeConfigSchema, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigSchema$Outbound = {};
/** @internal */
export declare const CreateEdgeConfigSchema$outboundSchema: z.ZodType<CreateEdgeConfigSchema$Outbound, z.ZodTypeDef, CreateEdgeConfigSchema>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigSchema$ {
    /** @deprecated use `CreateEdgeConfigSchema$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigSchema, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigSchema$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigSchema$Outbound, z.ZodTypeDef, CreateEdgeConfigSchema>;
    /** @deprecated use `CreateEdgeConfigSchema$Outbound` instead. */
    type Outbound = CreateEdgeConfigSchema$Outbound;
}
export declare function createEdgeConfigSchemaToJSON(createEdgeConfigSchema: CreateEdgeConfigSchema): string;
export declare function createEdgeConfigSchemaFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigSchema, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigType$inboundSchema: z.ZodNativeEnum<typeof CreateEdgeConfigType>;
/** @internal */
export declare const CreateEdgeConfigType$outboundSchema: z.ZodNativeEnum<typeof CreateEdgeConfigType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigType$ {
    /** @deprecated use `CreateEdgeConfigType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
    /** @deprecated use `CreateEdgeConfigType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
}
/** @internal */
export declare const CreateEdgeConfigPurpose$inboundSchema: z.ZodType<CreateEdgeConfigPurpose, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigPurpose$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const CreateEdgeConfigPurpose$outboundSchema: z.ZodType<CreateEdgeConfigPurpose$Outbound, z.ZodTypeDef, CreateEdgeConfigPurpose>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigPurpose$ {
    /** @deprecated use `CreateEdgeConfigPurpose$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigPurpose, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigPurpose$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigPurpose$Outbound, z.ZodTypeDef, CreateEdgeConfigPurpose>;
    /** @deprecated use `CreateEdgeConfigPurpose$Outbound` instead. */
    type Outbound = CreateEdgeConfigPurpose$Outbound;
}
export declare function createEdgeConfigPurposeToJSON(createEdgeConfigPurpose: CreateEdgeConfigPurpose): string;
export declare function createEdgeConfigPurposeFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigPurpose, SDKValidationError>;
/** @internal */
export declare const CreateEdgeConfigResponseBody$inboundSchema: z.ZodType<CreateEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateEdgeConfigResponseBody$Outbound = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    transfer?: CreateEdgeConfigTransfer$Outbound | undefined;
    schema?: CreateEdgeConfigSchema$Outbound | undefined;
    purpose?: CreateEdgeConfigPurpose$Outbound | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const CreateEdgeConfigResponseBody$outboundSchema: z.ZodType<CreateEdgeConfigResponseBody$Outbound, z.ZodTypeDef, CreateEdgeConfigResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateEdgeConfigResponseBody$ {
    /** @deprecated use `CreateEdgeConfigResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateEdgeConfigResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateEdgeConfigResponseBody$Outbound, z.ZodTypeDef, CreateEdgeConfigResponseBody>;
    /** @deprecated use `CreateEdgeConfigResponseBody$Outbound` instead. */
    type Outbound = CreateEdgeConfigResponseBody$Outbound;
}
export declare function createEdgeConfigResponseBodyToJSON(createEdgeConfigResponseBody: CreateEdgeConfigResponseBody): string;
export declare function createEdgeConfigResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateEdgeConfigResponseBody, SDKValidationError>;
//# sourceMappingURL=createedgeconfigop.d.ts.map