import * as z from "zod";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * Array of events generated by the User.
 */
export type UserEvent = {};
/** @internal */
export declare const UserEvent$inboundSchema: z.ZodType<UserEvent, z.ZodTypeDef, unknown>;
/** @internal */
export type UserEvent$Outbound = {};
/** @internal */
export declare const UserEvent$outboundSchema: z.ZodType<UserEvent$Outbound, z.ZodTypeDef, UserEvent>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace UserEvent$ {
    /** @deprecated use `UserEvent$inboundSchema` instead. */
    const inboundSchema: z.ZodType<UserEvent, z.ZodTypeDef, unknown>;
    /** @deprecated use `UserEvent$outboundSchema` instead. */
    const outboundSchema: z.ZodType<UserEvent$Outbound, z.ZodTypeDef, UserEvent>;
    /** @deprecated use `UserEvent$Outbound` instead. */
    type Outbound = UserEvent$Outbound;
}
export declare function userEventToJSON(userEvent: UserEvent): string;
export declare function userEventFromJSON(jsonString: string): SafeParseResult<UserEvent, SDKValidationError>;
//# sourceMappingURL=userevent.d.ts.map