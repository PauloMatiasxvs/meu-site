import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetAllLogDrainsRequest = {
    projectId?: string | undefined;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const GetAllLogDrainsDeliveryFormat: {
    readonly Json: "json";
    readonly Ndjson: "ndjson";
    readonly Syslog: "syslog";
};
export type GetAllLogDrainsDeliveryFormat = ClosedEnum<typeof GetAllLogDrainsDeliveryFormat>;
export declare const GetAllLogDrainsSources: {
    readonly Build: "build";
    readonly Edge: "edge";
    readonly Lambda: "lambda";
    readonly Static: "static";
    readonly External: "external";
    readonly Firewall: "firewall";
};
export type GetAllLogDrainsSources = ClosedEnum<typeof GetAllLogDrainsSources>;
export declare const GetAllLogDrainsEnvironments: {
    readonly Production: "production";
    readonly Preview: "preview";
};
export type GetAllLogDrainsEnvironments = ClosedEnum<typeof GetAllLogDrainsEnvironments>;
export declare const GetAllLogDrainsStatus: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
    readonly Errored: "errored";
};
export type GetAllLogDrainsStatus = ClosedEnum<typeof GetAllLogDrainsStatus>;
export declare const GetAllLogDrainsDisabledReason: {
    readonly DisabledByOwner: "disabled-by-owner";
    readonly FeatureNotAvailable: "feature-not-available";
    readonly AccountPlanDowngrade: "account-plan-downgrade";
    readonly DisabledByAdmin: "disabled-by-admin";
};
export type GetAllLogDrainsDisabledReason = ClosedEnum<typeof GetAllLogDrainsDisabledReason>;
export declare const GetAllLogDrainsCreatedFrom: {
    readonly SelfServed: "self-served";
    readonly Integration: "integration";
};
export type GetAllLogDrainsCreatedFrom = ClosedEnum<typeof GetAllLogDrainsCreatedFrom>;
export type GetAllLogDrainsResponseBody = {
    id: string;
    deliveryFormat: GetAllLogDrainsDeliveryFormat;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<GetAllLogDrainsSources> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<GetAllLogDrainsEnvironments>;
    status?: GetAllLogDrainsStatus | undefined;
    disabledAt?: number | undefined;
    disabledReason?: GetAllLogDrainsDisabledReason | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    secret?: string | undefined;
    createdFrom?: GetAllLogDrainsCreatedFrom | undefined;
};
/** @internal */
export declare const GetAllLogDrainsRequest$inboundSchema: z.ZodType<GetAllLogDrainsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAllLogDrainsRequest$Outbound = {
    projectId?: string | undefined;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetAllLogDrainsRequest$outboundSchema: z.ZodType<GetAllLogDrainsRequest$Outbound, z.ZodTypeDef, GetAllLogDrainsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsRequest$ {
    /** @deprecated use `GetAllLogDrainsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAllLogDrainsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAllLogDrainsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAllLogDrainsRequest$Outbound, z.ZodTypeDef, GetAllLogDrainsRequest>;
    /** @deprecated use `GetAllLogDrainsRequest$Outbound` instead. */
    type Outbound = GetAllLogDrainsRequest$Outbound;
}
export declare function getAllLogDrainsRequestToJSON(getAllLogDrainsRequest: GetAllLogDrainsRequest): string;
export declare function getAllLogDrainsRequestFromJSON(jsonString: string): SafeParseResult<GetAllLogDrainsRequest, SDKValidationError>;
/** @internal */
export declare const GetAllLogDrainsDeliveryFormat$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsDeliveryFormat>;
/** @internal */
export declare const GetAllLogDrainsDeliveryFormat$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsDeliveryFormat>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsDeliveryFormat$ {
    /** @deprecated use `GetAllLogDrainsDeliveryFormat$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
    /** @deprecated use `GetAllLogDrainsDeliveryFormat$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsSources$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsSources>;
/** @internal */
export declare const GetAllLogDrainsSources$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsSources>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsSources$ {
    /** @deprecated use `GetAllLogDrainsSources$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
    /** @deprecated use `GetAllLogDrainsSources$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsEnvironments$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsEnvironments>;
/** @internal */
export declare const GetAllLogDrainsEnvironments$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsEnvironments>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsEnvironments$ {
    /** @deprecated use `GetAllLogDrainsEnvironments$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
    /** @deprecated use `GetAllLogDrainsEnvironments$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsStatus$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsStatus>;
/** @internal */
export declare const GetAllLogDrainsStatus$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsStatus$ {
    /** @deprecated use `GetAllLogDrainsStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
    /** @deprecated use `GetAllLogDrainsStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsDisabledReason$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsDisabledReason>;
/** @internal */
export declare const GetAllLogDrainsDisabledReason$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsDisabledReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsDisabledReason$ {
    /** @deprecated use `GetAllLogDrainsDisabledReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
    /** @deprecated use `GetAllLogDrainsDisabledReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsCreatedFrom$inboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsCreatedFrom>;
/** @internal */
export declare const GetAllLogDrainsCreatedFrom$outboundSchema: z.ZodNativeEnum<typeof GetAllLogDrainsCreatedFrom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsCreatedFrom$ {
    /** @deprecated use `GetAllLogDrainsCreatedFrom$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
        readonly Integration: "integration";
    }>;
    /** @deprecated use `GetAllLogDrainsCreatedFrom$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
        readonly Integration: "integration";
    }>;
}
/** @internal */
export declare const GetAllLogDrainsResponseBody$inboundSchema: z.ZodType<GetAllLogDrainsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetAllLogDrainsResponseBody$Outbound = {
    id: string;
    deliveryFormat: string;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<string> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<string>;
    status?: string | undefined;
    disabledAt?: number | undefined;
    disabledReason?: string | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    secret?: string | undefined;
    createdFrom?: string | undefined;
};
/** @internal */
export declare const GetAllLogDrainsResponseBody$outboundSchema: z.ZodType<GetAllLogDrainsResponseBody$Outbound, z.ZodTypeDef, GetAllLogDrainsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetAllLogDrainsResponseBody$ {
    /** @deprecated use `GetAllLogDrainsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetAllLogDrainsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetAllLogDrainsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetAllLogDrainsResponseBody$Outbound, z.ZodTypeDef, GetAllLogDrainsResponseBody>;
    /** @deprecated use `GetAllLogDrainsResponseBody$Outbound` instead. */
    type Outbound = GetAllLogDrainsResponseBody$Outbound;
}
export declare function getAllLogDrainsResponseBodyToJSON(getAllLogDrainsResponseBody: GetAllLogDrainsResponseBody): string;
export declare function getAllLogDrainsResponseBodyFromJSON(jsonString: string): SafeParseResult<GetAllLogDrainsResponseBody, SDKValidationError>;
//# sourceMappingURL=getalllogdrainsop.d.ts.map