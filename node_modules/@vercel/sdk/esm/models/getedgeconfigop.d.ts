import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetEdgeConfigRequest = {
    edgeConfigId: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
/**
 * Keeps track of the current state of the Edge Config while it gets transferred.
 */
export type GetEdgeConfigTransfer = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
export type GetEdgeConfigSchema = {};
export declare const GetEdgeConfigType: {
    readonly Flags: "flags";
};
export type GetEdgeConfigType = ClosedEnum<typeof GetEdgeConfigType>;
export type GetEdgeConfigPurpose = {
    type: GetEdgeConfigType;
    projectId: string;
};
/**
 * The EdgeConfig.
 */
export type GetEdgeConfigResponseBody = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    /**
     * Name for the Edge Config Names are not unique. Must start with an alphabetic character and can contain only alphanumeric characters and underscores).
     */
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    /**
     * Keeps track of the current state of the Edge Config while it gets transferred.
     */
    transfer?: GetEdgeConfigTransfer | undefined;
    schema?: GetEdgeConfigSchema | undefined;
    purpose?: GetEdgeConfigPurpose | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const GetEdgeConfigRequest$inboundSchema: z.ZodType<GetEdgeConfigRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigRequest$Outbound = {
    edgeConfigId: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetEdgeConfigRequest$outboundSchema: z.ZodType<GetEdgeConfigRequest$Outbound, z.ZodTypeDef, GetEdgeConfigRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigRequest$ {
    /** @deprecated use `GetEdgeConfigRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigRequest$Outbound, z.ZodTypeDef, GetEdgeConfigRequest>;
    /** @deprecated use `GetEdgeConfigRequest$Outbound` instead. */
    type Outbound = GetEdgeConfigRequest$Outbound;
}
export declare function getEdgeConfigRequestToJSON(getEdgeConfigRequest: GetEdgeConfigRequest): string;
export declare function getEdgeConfigRequestFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigRequest, SDKValidationError>;
/** @internal */
export declare const GetEdgeConfigTransfer$inboundSchema: z.ZodType<GetEdgeConfigTransfer, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigTransfer$Outbound = {
    fromAccountId: string;
    startedAt: number;
    doneAt: number | null;
};
/** @internal */
export declare const GetEdgeConfigTransfer$outboundSchema: z.ZodType<GetEdgeConfigTransfer$Outbound, z.ZodTypeDef, GetEdgeConfigTransfer>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigTransfer$ {
    /** @deprecated use `GetEdgeConfigTransfer$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigTransfer, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigTransfer$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigTransfer$Outbound, z.ZodTypeDef, GetEdgeConfigTransfer>;
    /** @deprecated use `GetEdgeConfigTransfer$Outbound` instead. */
    type Outbound = GetEdgeConfigTransfer$Outbound;
}
export declare function getEdgeConfigTransferToJSON(getEdgeConfigTransfer: GetEdgeConfigTransfer): string;
export declare function getEdgeConfigTransferFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigTransfer, SDKValidationError>;
/** @internal */
export declare const GetEdgeConfigSchema$inboundSchema: z.ZodType<GetEdgeConfigSchema, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigSchema$Outbound = {};
/** @internal */
export declare const GetEdgeConfigSchema$outboundSchema: z.ZodType<GetEdgeConfigSchema$Outbound, z.ZodTypeDef, GetEdgeConfigSchema>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigSchema$ {
    /** @deprecated use `GetEdgeConfigSchema$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigSchema, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigSchema$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigSchema$Outbound, z.ZodTypeDef, GetEdgeConfigSchema>;
    /** @deprecated use `GetEdgeConfigSchema$Outbound` instead. */
    type Outbound = GetEdgeConfigSchema$Outbound;
}
export declare function getEdgeConfigSchemaToJSON(getEdgeConfigSchema: GetEdgeConfigSchema): string;
export declare function getEdgeConfigSchemaFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigSchema, SDKValidationError>;
/** @internal */
export declare const GetEdgeConfigType$inboundSchema: z.ZodNativeEnum<typeof GetEdgeConfigType>;
/** @internal */
export declare const GetEdgeConfigType$outboundSchema: z.ZodNativeEnum<typeof GetEdgeConfigType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigType$ {
    /** @deprecated use `GetEdgeConfigType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
    /** @deprecated use `GetEdgeConfigType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Flags: "flags";
    }>;
}
/** @internal */
export declare const GetEdgeConfigPurpose$inboundSchema: z.ZodType<GetEdgeConfigPurpose, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigPurpose$Outbound = {
    type: string;
    projectId: string;
};
/** @internal */
export declare const GetEdgeConfigPurpose$outboundSchema: z.ZodType<GetEdgeConfigPurpose$Outbound, z.ZodTypeDef, GetEdgeConfigPurpose>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigPurpose$ {
    /** @deprecated use `GetEdgeConfigPurpose$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigPurpose, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigPurpose$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigPurpose$Outbound, z.ZodTypeDef, GetEdgeConfigPurpose>;
    /** @deprecated use `GetEdgeConfigPurpose$Outbound` instead. */
    type Outbound = GetEdgeConfigPurpose$Outbound;
}
export declare function getEdgeConfigPurposeToJSON(getEdgeConfigPurpose: GetEdgeConfigPurpose): string;
export declare function getEdgeConfigPurposeFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigPurpose, SDKValidationError>;
/** @internal */
export declare const GetEdgeConfigResponseBody$inboundSchema: z.ZodType<GetEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetEdgeConfigResponseBody$Outbound = {
    createdAt?: number | undefined;
    updatedAt?: number | undefined;
    id?: string | undefined;
    slug?: string | undefined;
    ownerId?: string | undefined;
    digest?: string | undefined;
    transfer?: GetEdgeConfigTransfer$Outbound | undefined;
    schema?: GetEdgeConfigSchema$Outbound | undefined;
    purpose?: GetEdgeConfigPurpose$Outbound | undefined;
    sizeInBytes: number;
    itemCount: number;
};
/** @internal */
export declare const GetEdgeConfigResponseBody$outboundSchema: z.ZodType<GetEdgeConfigResponseBody$Outbound, z.ZodTypeDef, GetEdgeConfigResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetEdgeConfigResponseBody$ {
    /** @deprecated use `GetEdgeConfigResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetEdgeConfigResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetEdgeConfigResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetEdgeConfigResponseBody$Outbound, z.ZodTypeDef, GetEdgeConfigResponseBody>;
    /** @deprecated use `GetEdgeConfigResponseBody$Outbound` instead. */
    type Outbound = GetEdgeConfigResponseBody$Outbound;
}
export declare function getEdgeConfigResponseBodyToJSON(getEdgeConfigResponseBody: GetEdgeConfigResponseBody): string;
export declare function getEdgeConfigResponseBodyFromJSON(jsonString: string): SafeParseResult<GetEdgeConfigResponseBody, SDKValidationError>;
//# sourceMappingURL=getedgeconfigop.d.ts.map