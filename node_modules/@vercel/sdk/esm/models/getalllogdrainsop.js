/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
export const GetAllLogDrainsDeliveryFormat = {
    Json: "json",
    Ndjson: "ndjson",
    Syslog: "syslog",
};
export const GetAllLogDrainsSources = {
    Build: "build",
    Edge: "edge",
    Lambda: "lambda",
    Static: "static",
    External: "external",
    Firewall: "firewall",
};
export const GetAllLogDrainsEnvironments = {
    Production: "production",
    Preview: "preview",
};
export const GetAllLogDrainsStatus = {
    Enabled: "enabled",
    Disabled: "disabled",
    Errored: "errored",
};
export const GetAllLogDrainsDisabledReason = {
    DisabledByOwner: "disabled-by-owner",
    FeatureNotAvailable: "feature-not-available",
    AccountPlanDowngrade: "account-plan-downgrade",
    DisabledByAdmin: "disabled-by-admin",
};
export const GetAllLogDrainsCreatedFrom = {
    SelfServed: "self-served",
    Integration: "integration",
};
/** @internal */
export const GetAllLogDrainsRequest$inboundSchema = z.object({
    projectId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/** @internal */
export const GetAllLogDrainsRequest$outboundSchema = z.object({
    projectId: z.string().optional(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsRequest$;
(function (GetAllLogDrainsRequest$) {
    /** @deprecated use `GetAllLogDrainsRequest$inboundSchema` instead. */
    GetAllLogDrainsRequest$.inboundSchema = GetAllLogDrainsRequest$inboundSchema;
    /** @deprecated use `GetAllLogDrainsRequest$outboundSchema` instead. */
    GetAllLogDrainsRequest$.outboundSchema = GetAllLogDrainsRequest$outboundSchema;
})(GetAllLogDrainsRequest$ || (GetAllLogDrainsRequest$ = {}));
export function getAllLogDrainsRequestToJSON(getAllLogDrainsRequest) {
    return JSON.stringify(GetAllLogDrainsRequest$outboundSchema.parse(getAllLogDrainsRequest));
}
export function getAllLogDrainsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAllLogDrainsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAllLogDrainsRequest' from JSON`);
}
/** @internal */
export const GetAllLogDrainsDeliveryFormat$inboundSchema = z.nativeEnum(GetAllLogDrainsDeliveryFormat);
/** @internal */
export const GetAllLogDrainsDeliveryFormat$outboundSchema = GetAllLogDrainsDeliveryFormat$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsDeliveryFormat$;
(function (GetAllLogDrainsDeliveryFormat$) {
    /** @deprecated use `GetAllLogDrainsDeliveryFormat$inboundSchema` instead. */
    GetAllLogDrainsDeliveryFormat$.inboundSchema = GetAllLogDrainsDeliveryFormat$inboundSchema;
    /** @deprecated use `GetAllLogDrainsDeliveryFormat$outboundSchema` instead. */
    GetAllLogDrainsDeliveryFormat$.outboundSchema = GetAllLogDrainsDeliveryFormat$outboundSchema;
})(GetAllLogDrainsDeliveryFormat$ || (GetAllLogDrainsDeliveryFormat$ = {}));
/** @internal */
export const GetAllLogDrainsSources$inboundSchema = z.nativeEnum(GetAllLogDrainsSources);
/** @internal */
export const GetAllLogDrainsSources$outboundSchema = GetAllLogDrainsSources$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsSources$;
(function (GetAllLogDrainsSources$) {
    /** @deprecated use `GetAllLogDrainsSources$inboundSchema` instead. */
    GetAllLogDrainsSources$.inboundSchema = GetAllLogDrainsSources$inboundSchema;
    /** @deprecated use `GetAllLogDrainsSources$outboundSchema` instead. */
    GetAllLogDrainsSources$.outboundSchema = GetAllLogDrainsSources$outboundSchema;
})(GetAllLogDrainsSources$ || (GetAllLogDrainsSources$ = {}));
/** @internal */
export const GetAllLogDrainsEnvironments$inboundSchema = z.nativeEnum(GetAllLogDrainsEnvironments);
/** @internal */
export const GetAllLogDrainsEnvironments$outboundSchema = GetAllLogDrainsEnvironments$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsEnvironments$;
(function (GetAllLogDrainsEnvironments$) {
    /** @deprecated use `GetAllLogDrainsEnvironments$inboundSchema` instead. */
    GetAllLogDrainsEnvironments$.inboundSchema = GetAllLogDrainsEnvironments$inboundSchema;
    /** @deprecated use `GetAllLogDrainsEnvironments$outboundSchema` instead. */
    GetAllLogDrainsEnvironments$.outboundSchema = GetAllLogDrainsEnvironments$outboundSchema;
})(GetAllLogDrainsEnvironments$ || (GetAllLogDrainsEnvironments$ = {}));
/** @internal */
export const GetAllLogDrainsStatus$inboundSchema = z.nativeEnum(GetAllLogDrainsStatus);
/** @internal */
export const GetAllLogDrainsStatus$outboundSchema = GetAllLogDrainsStatus$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsStatus$;
(function (GetAllLogDrainsStatus$) {
    /** @deprecated use `GetAllLogDrainsStatus$inboundSchema` instead. */
    GetAllLogDrainsStatus$.inboundSchema = GetAllLogDrainsStatus$inboundSchema;
    /** @deprecated use `GetAllLogDrainsStatus$outboundSchema` instead. */
    GetAllLogDrainsStatus$.outboundSchema = GetAllLogDrainsStatus$outboundSchema;
})(GetAllLogDrainsStatus$ || (GetAllLogDrainsStatus$ = {}));
/** @internal */
export const GetAllLogDrainsDisabledReason$inboundSchema = z.nativeEnum(GetAllLogDrainsDisabledReason);
/** @internal */
export const GetAllLogDrainsDisabledReason$outboundSchema = GetAllLogDrainsDisabledReason$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsDisabledReason$;
(function (GetAllLogDrainsDisabledReason$) {
    /** @deprecated use `GetAllLogDrainsDisabledReason$inboundSchema` instead. */
    GetAllLogDrainsDisabledReason$.inboundSchema = GetAllLogDrainsDisabledReason$inboundSchema;
    /** @deprecated use `GetAllLogDrainsDisabledReason$outboundSchema` instead. */
    GetAllLogDrainsDisabledReason$.outboundSchema = GetAllLogDrainsDisabledReason$outboundSchema;
})(GetAllLogDrainsDisabledReason$ || (GetAllLogDrainsDisabledReason$ = {}));
/** @internal */
export const GetAllLogDrainsCreatedFrom$inboundSchema = z.nativeEnum(GetAllLogDrainsCreatedFrom);
/** @internal */
export const GetAllLogDrainsCreatedFrom$outboundSchema = GetAllLogDrainsCreatedFrom$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsCreatedFrom$;
(function (GetAllLogDrainsCreatedFrom$) {
    /** @deprecated use `GetAllLogDrainsCreatedFrom$inboundSchema` instead. */
    GetAllLogDrainsCreatedFrom$.inboundSchema = GetAllLogDrainsCreatedFrom$inboundSchema;
    /** @deprecated use `GetAllLogDrainsCreatedFrom$outboundSchema` instead. */
    GetAllLogDrainsCreatedFrom$.outboundSchema = GetAllLogDrainsCreatedFrom$outboundSchema;
})(GetAllLogDrainsCreatedFrom$ || (GetAllLogDrainsCreatedFrom$ = {}));
/** @internal */
export const GetAllLogDrainsResponseBody$inboundSchema = z.object({
    id: z.string(),
    deliveryFormat: GetAllLogDrainsDeliveryFormat$inboundSchema,
    url: z.string(),
    name: z.string(),
    clientId: z.string().optional(),
    configurationId: z.string().optional(),
    teamId: z.nullable(z.string()).optional(),
    ownerId: z.string(),
    projectIds: z.array(z.string()).optional(),
    createdAt: z.number(),
    deletedAt: z.nullable(z.number()),
    updatedAt: z.number(),
    sources: z.array(GetAllLogDrainsSources$inboundSchema).optional(),
    headers: z.record(z.string()).optional(),
    environments: z.array(GetAllLogDrainsEnvironments$inboundSchema),
    status: GetAllLogDrainsStatus$inboundSchema.optional(),
    disabledAt: z.number().optional(),
    disabledReason: GetAllLogDrainsDisabledReason$inboundSchema.optional(),
    disabledBy: z.string().optional(),
    firstErrorTimestamp: z.number().optional(),
    samplingRate: z.number().optional(),
    hideIpAddresses: z.boolean().optional(),
    secret: z.string().optional(),
    createdFrom: GetAllLogDrainsCreatedFrom$inboundSchema.optional(),
});
/** @internal */
export const GetAllLogDrainsResponseBody$outboundSchema = z.object({
    id: z.string(),
    deliveryFormat: GetAllLogDrainsDeliveryFormat$outboundSchema,
    url: z.string(),
    name: z.string(),
    clientId: z.string().optional(),
    configurationId: z.string().optional(),
    teamId: z.nullable(z.string()).optional(),
    ownerId: z.string(),
    projectIds: z.array(z.string()).optional(),
    createdAt: z.number(),
    deletedAt: z.nullable(z.number()),
    updatedAt: z.number(),
    sources: z.array(GetAllLogDrainsSources$outboundSchema).optional(),
    headers: z.record(z.string()).optional(),
    environments: z.array(GetAllLogDrainsEnvironments$outboundSchema),
    status: GetAllLogDrainsStatus$outboundSchema.optional(),
    disabledAt: z.number().optional(),
    disabledReason: GetAllLogDrainsDisabledReason$outboundSchema.optional(),
    disabledBy: z.string().optional(),
    firstErrorTimestamp: z.number().optional(),
    samplingRate: z.number().optional(),
    hideIpAddresses: z.boolean().optional(),
    secret: z.string().optional(),
    createdFrom: GetAllLogDrainsCreatedFrom$outboundSchema.optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetAllLogDrainsResponseBody$;
(function (GetAllLogDrainsResponseBody$) {
    /** @deprecated use `GetAllLogDrainsResponseBody$inboundSchema` instead. */
    GetAllLogDrainsResponseBody$.inboundSchema = GetAllLogDrainsResponseBody$inboundSchema;
    /** @deprecated use `GetAllLogDrainsResponseBody$outboundSchema` instead. */
    GetAllLogDrainsResponseBody$.outboundSchema = GetAllLogDrainsResponseBody$outboundSchema;
})(GetAllLogDrainsResponseBody$ || (GetAllLogDrainsResponseBody$ = {}));
export function getAllLogDrainsResponseBodyToJSON(getAllLogDrainsResponseBody) {
    return JSON.stringify(GetAllLogDrainsResponseBody$outboundSchema.parse(getAllLogDrainsResponseBody));
}
export function getAllLogDrainsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetAllLogDrainsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetAllLogDrainsResponseBody' from JSON`);
}
//# sourceMappingURL=getalllogdrainsop.js.map