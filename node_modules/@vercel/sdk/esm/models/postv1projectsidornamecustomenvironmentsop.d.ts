import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
 */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsType: {
    readonly Equals: "equals";
    readonly StartsWith: "startsWith";
    readonly EndsWith: "endsWith";
};
/**
 * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
 */
export type PostV1ProjectsIdOrNameCustomEnvironmentsType = ClosedEnum<typeof PostV1ProjectsIdOrNameCustomEnvironmentsType>;
/**
 * How we want to determine a matching branch. This is optional.
 */
export type BranchMatcher = {
    /**
     * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
     */
    type: PostV1ProjectsIdOrNameCustomEnvironmentsType;
    /**
     * Git branch name or portion thereof.
     */
    pattern: string;
};
export type PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody = {
    /**
     * The slug of the custom environment to create.
     */
    slug?: string | undefined;
    /**
     * Description of the custom environment. This is optional.
     */
    description?: string | undefined;
    /**
     * How we want to determine a matching branch. This is optional.
     */
    branchMatcher?: BranchMatcher | undefined;
    /**
     * Where to copy environment variables from. This is optional.
     */
    copyEnvVarsFrom?: string | undefined;
};
export type PostV1ProjectsIdOrNameCustomEnvironmentsRequest = {
    /**
     * The unique project identifier or the project name
     */
    idOrName: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody?: PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody | undefined;
};
export type PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody = {};
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema: z.ZodNativeEnum<typeof PostV1ProjectsIdOrNameCustomEnvironmentsType>;
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema: z.ZodNativeEnum<typeof PostV1ProjectsIdOrNameCustomEnvironmentsType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostV1ProjectsIdOrNameCustomEnvironmentsType$ {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Equals: "equals";
        readonly StartsWith: "startsWith";
        readonly EndsWith: "endsWith";
    }>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Equals: "equals";
        readonly StartsWith: "startsWith";
        readonly EndsWith: "endsWith";
    }>;
}
/** @internal */
export declare const BranchMatcher$inboundSchema: z.ZodType<BranchMatcher, z.ZodTypeDef, unknown>;
/** @internal */
export type BranchMatcher$Outbound = {
    type: string;
    pattern: string;
};
/** @internal */
export declare const BranchMatcher$outboundSchema: z.ZodType<BranchMatcher$Outbound, z.ZodTypeDef, BranchMatcher>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace BranchMatcher$ {
    /** @deprecated use `BranchMatcher$inboundSchema` instead. */
    const inboundSchema: z.ZodType<BranchMatcher, z.ZodTypeDef, unknown>;
    /** @deprecated use `BranchMatcher$outboundSchema` instead. */
    const outboundSchema: z.ZodType<BranchMatcher$Outbound, z.ZodTypeDef, BranchMatcher>;
    /** @deprecated use `BranchMatcher$Outbound` instead. */
    type Outbound = BranchMatcher$Outbound;
}
export declare function branchMatcherToJSON(branchMatcher: BranchMatcher): string;
export declare function branchMatcherFromJSON(jsonString: string): SafeParseResult<BranchMatcher, SDKValidationError>;
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound = {
    slug?: string | undefined;
    description?: string | undefined;
    branchMatcher?: BranchMatcher$Outbound | undefined;
    copyEnvVarsFrom?: string | undefined;
};
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$ {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound` instead. */
    type Outbound = PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound;
}
export declare function postV1ProjectsIdOrNameCustomEnvironmentsRequestBodyToJSON(postV1ProjectsIdOrNameCustomEnvironmentsRequestBody: PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody): string;
export declare function postV1ProjectsIdOrNameCustomEnvironmentsRequestBodyFromJSON(jsonString: string): SafeParseResult<PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody, SDKValidationError>;
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type PostV1ProjectsIdOrNameCustomEnvironmentsRequest$Outbound = {
    idOrName: string;
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody?: PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$Outbound | undefined;
};
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequest$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostV1ProjectsIdOrNameCustomEnvironmentsRequest$ {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsRequest$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsRequest>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequest$Outbound` instead. */
    type Outbound = PostV1ProjectsIdOrNameCustomEnvironmentsRequest$Outbound;
}
export declare function postV1ProjectsIdOrNameCustomEnvironmentsRequestToJSON(postV1ProjectsIdOrNameCustomEnvironmentsRequest: PostV1ProjectsIdOrNameCustomEnvironmentsRequest): string;
export declare function postV1ProjectsIdOrNameCustomEnvironmentsRequestFromJSON(jsonString: string): SafeParseResult<PostV1ProjectsIdOrNameCustomEnvironmentsRequest, SDKValidationError>;
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound = {};
/** @internal */
export declare const PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$ {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound, z.ZodTypeDef, PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody>;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound` instead. */
    type Outbound = PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$Outbound;
}
export declare function postV1ProjectsIdOrNameCustomEnvironmentsResponseBodyToJSON(postV1ProjectsIdOrNameCustomEnvironmentsResponseBody: PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody): string;
export declare function postV1ProjectsIdOrNameCustomEnvironmentsResponseBodyFromJSON(jsonString: string): SafeParseResult<PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody, SDKValidationError>;
//# sourceMappingURL=postv1projectsidornamecustomenvironmentsop.d.ts.map