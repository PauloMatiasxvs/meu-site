/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
/** @internal */
export const UserEvent$inboundSchema = z.object({});
/** @internal */
export const UserEvent$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var UserEvent$;
(function (UserEvent$) {
    /** @deprecated use `UserEvent$inboundSchema` instead. */
    UserEvent$.inboundSchema = UserEvent$inboundSchema;
    /** @deprecated use `UserEvent$outboundSchema` instead. */
    UserEvent$.outboundSchema = UserEvent$outboundSchema;
})(UserEvent$ || (UserEvent$ = {}));
export function userEventToJSON(userEvent) {
    return JSON.stringify(UserEvent$outboundSchema.parse(userEvent));
}
export function userEventFromJSON(jsonString) {
    return safeParse(jsonString, (x) => UserEvent$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'UserEvent' from JSON`);
}
//# sourceMappingURL=userevent.js.map