import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
/**
 * The delivery log format
 */
export declare const CreateConfigurableLogDrainDeliveryFormat: {
    readonly Json: "json";
    readonly Ndjson: "ndjson";
};
/**
 * The delivery log format
 */
export type CreateConfigurableLogDrainDeliveryFormat = ClosedEnum<typeof CreateConfigurableLogDrainDeliveryFormat>;
export declare const CreateConfigurableLogDrainSources: {
    readonly Static: "static";
    readonly Lambda: "lambda";
    readonly Build: "build";
    readonly Edge: "edge";
    readonly External: "external";
    readonly Firewall: "firewall";
};
export type CreateConfigurableLogDrainSources = ClosedEnum<typeof CreateConfigurableLogDrainSources>;
export declare const CreateConfigurableLogDrainEnvironments: {
    readonly Preview: "preview";
    readonly Production: "production";
};
export type CreateConfigurableLogDrainEnvironments = ClosedEnum<typeof CreateConfigurableLogDrainEnvironments>;
export type CreateConfigurableLogDrainRequestBody = {
    /**
     * The delivery log format
     */
    deliveryFormat: CreateConfigurableLogDrainDeliveryFormat;
    /**
     * The log drain url
     */
    url: string;
    /**
     * Headers to be sent together with the request
     */
    headers?: {
        [k: string]: string;
    } | undefined;
    projectIds?: Array<string> | undefined;
    sources: Array<CreateConfigurableLogDrainSources>;
    environments?: Array<CreateConfigurableLogDrainEnvironments> | undefined;
    /**
     * Custom secret of log drain
     */
    secret?: string | undefined;
    /**
     * The sampling rate for this log drain. It should be a percentage rate between 0 and 100. With max 2 decimal points
     */
    samplingRate?: number | undefined;
    /**
     * The custom name of this log drain.
     */
    name?: string | undefined;
};
export type CreateConfigurableLogDrainRequest = {
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
    requestBody: CreateConfigurableLogDrainRequestBody;
};
export declare const CreateConfigurableLogDrainLogDrainsDeliveryFormat: {
    readonly Json: "json";
    readonly Ndjson: "ndjson";
    readonly Syslog: "syslog";
};
export type CreateConfigurableLogDrainLogDrainsDeliveryFormat = ClosedEnum<typeof CreateConfigurableLogDrainLogDrainsDeliveryFormat>;
export declare const CreateConfigurableLogDrainLogDrainsSources: {
    readonly Build: "build";
    readonly Edge: "edge";
    readonly Lambda: "lambda";
    readonly Static: "static";
    readonly External: "external";
    readonly Firewall: "firewall";
};
export type CreateConfigurableLogDrainLogDrainsSources = ClosedEnum<typeof CreateConfigurableLogDrainLogDrainsSources>;
export declare const CreateConfigurableLogDrainLogDrainsEnvironments: {
    readonly Production: "production";
    readonly Preview: "preview";
};
export type CreateConfigurableLogDrainLogDrainsEnvironments = ClosedEnum<typeof CreateConfigurableLogDrainLogDrainsEnvironments>;
export declare const CreateConfigurableLogDrainStatus: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
    readonly Errored: "errored";
};
export type CreateConfigurableLogDrainStatus = ClosedEnum<typeof CreateConfigurableLogDrainStatus>;
export declare const CreateConfigurableLogDrainDisabledReason: {
    readonly DisabledByOwner: "disabled-by-owner";
    readonly FeatureNotAvailable: "feature-not-available";
    readonly AccountPlanDowngrade: "account-plan-downgrade";
    readonly DisabledByAdmin: "disabled-by-admin";
};
export type CreateConfigurableLogDrainDisabledReason = ClosedEnum<typeof CreateConfigurableLogDrainDisabledReason>;
export declare const CreateConfigurableLogDrainCreatedFrom: {
    readonly SelfServed: "self-served";
};
export type CreateConfigurableLogDrainCreatedFrom = ClosedEnum<typeof CreateConfigurableLogDrainCreatedFrom>;
export type CreateConfigurableLogDrainResponseBody = {
    /**
     * The secret to validate the log-drain payload
     */
    secret?: string | undefined;
    id: string;
    deliveryFormat: CreateConfigurableLogDrainLogDrainsDeliveryFormat;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<CreateConfigurableLogDrainLogDrainsSources> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<CreateConfigurableLogDrainLogDrainsEnvironments>;
    status?: CreateConfigurableLogDrainStatus | undefined;
    disabledAt?: number | undefined;
    disabledReason?: CreateConfigurableLogDrainDisabledReason | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    createdFrom?: CreateConfigurableLogDrainCreatedFrom | undefined;
};
/** @internal */
export declare const CreateConfigurableLogDrainDeliveryFormat$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainDeliveryFormat>;
/** @internal */
export declare const CreateConfigurableLogDrainDeliveryFormat$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainDeliveryFormat>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainDeliveryFormat$ {
    /** @deprecated use `CreateConfigurableLogDrainDeliveryFormat$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainDeliveryFormat$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainSources$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainSources>;
/** @internal */
export declare const CreateConfigurableLogDrainSources$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainSources>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainSources$ {
    /** @deprecated use `CreateConfigurableLogDrainSources$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Static: "static";
        readonly Lambda: "lambda";
        readonly Build: "build";
        readonly Edge: "edge";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainSources$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Static: "static";
        readonly Lambda: "lambda";
        readonly Build: "build";
        readonly Edge: "edge";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainEnvironments$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainEnvironments>;
/** @internal */
export declare const CreateConfigurableLogDrainEnvironments$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainEnvironments>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainEnvironments$ {
    /** @deprecated use `CreateConfigurableLogDrainEnvironments$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Preview: "preview";
        readonly Production: "production";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainEnvironments$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Preview: "preview";
        readonly Production: "production";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainRequestBody$inboundSchema: z.ZodType<CreateConfigurableLogDrainRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateConfigurableLogDrainRequestBody$Outbound = {
    deliveryFormat: string;
    url: string;
    headers?: {
        [k: string]: string;
    } | undefined;
    projectIds?: Array<string> | undefined;
    sources: Array<string>;
    environments?: Array<string> | undefined;
    secret?: string | undefined;
    samplingRate?: number | undefined;
    name?: string | undefined;
};
/** @internal */
export declare const CreateConfigurableLogDrainRequestBody$outboundSchema: z.ZodType<CreateConfigurableLogDrainRequestBody$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainRequestBody$ {
    /** @deprecated use `CreateConfigurableLogDrainRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateConfigurableLogDrainRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateConfigurableLogDrainRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateConfigurableLogDrainRequestBody$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainRequestBody>;
    /** @deprecated use `CreateConfigurableLogDrainRequestBody$Outbound` instead. */
    type Outbound = CreateConfigurableLogDrainRequestBody$Outbound;
}
export declare function createConfigurableLogDrainRequestBodyToJSON(createConfigurableLogDrainRequestBody: CreateConfigurableLogDrainRequestBody): string;
export declare function createConfigurableLogDrainRequestBodyFromJSON(jsonString: string): SafeParseResult<CreateConfigurableLogDrainRequestBody, SDKValidationError>;
/** @internal */
export declare const CreateConfigurableLogDrainRequest$inboundSchema: z.ZodType<CreateConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateConfigurableLogDrainRequest$Outbound = {
    teamId?: string | undefined;
    slug?: string | undefined;
    RequestBody: CreateConfigurableLogDrainRequestBody$Outbound;
};
/** @internal */
export declare const CreateConfigurableLogDrainRequest$outboundSchema: z.ZodType<CreateConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainRequest$ {
    /** @deprecated use `CreateConfigurableLogDrainRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateConfigurableLogDrainRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainRequest>;
    /** @deprecated use `CreateConfigurableLogDrainRequest$Outbound` instead. */
    type Outbound = CreateConfigurableLogDrainRequest$Outbound;
}
export declare function createConfigurableLogDrainRequestToJSON(createConfigurableLogDrainRequest: CreateConfigurableLogDrainRequest): string;
export declare function createConfigurableLogDrainRequestFromJSON(jsonString: string): SafeParseResult<CreateConfigurableLogDrainRequest, SDKValidationError>;
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsDeliveryFormat$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsDeliveryFormat>;
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsDeliveryFormat$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsDeliveryFormat>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainLogDrainsDeliveryFormat$ {
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsDeliveryFormat$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsDeliveryFormat$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsSources$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsSources>;
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsSources$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsSources>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainLogDrainsSources$ {
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsSources$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsSources$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsEnvironments$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsEnvironments>;
/** @internal */
export declare const CreateConfigurableLogDrainLogDrainsEnvironments$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainLogDrainsEnvironments>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainLogDrainsEnvironments$ {
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsEnvironments$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainLogDrainsEnvironments$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainStatus$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainStatus>;
/** @internal */
export declare const CreateConfigurableLogDrainStatus$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainStatus$ {
    /** @deprecated use `CreateConfigurableLogDrainStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainDisabledReason$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainDisabledReason>;
/** @internal */
export declare const CreateConfigurableLogDrainDisabledReason$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainDisabledReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainDisabledReason$ {
    /** @deprecated use `CreateConfigurableLogDrainDisabledReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainDisabledReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainCreatedFrom$inboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainCreatedFrom>;
/** @internal */
export declare const CreateConfigurableLogDrainCreatedFrom$outboundSchema: z.ZodNativeEnum<typeof CreateConfigurableLogDrainCreatedFrom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainCreatedFrom$ {
    /** @deprecated use `CreateConfigurableLogDrainCreatedFrom$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
    }>;
    /** @deprecated use `CreateConfigurableLogDrainCreatedFrom$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
    }>;
}
/** @internal */
export declare const CreateConfigurableLogDrainResponseBody$inboundSchema: z.ZodType<CreateConfigurableLogDrainResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateConfigurableLogDrainResponseBody$Outbound = {
    secret?: string | undefined;
    id: string;
    deliveryFormat: string;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<string> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<string>;
    status?: string | undefined;
    disabledAt?: number | undefined;
    disabledReason?: string | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    createdFrom?: string | undefined;
};
/** @internal */
export declare const CreateConfigurableLogDrainResponseBody$outboundSchema: z.ZodType<CreateConfigurableLogDrainResponseBody$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateConfigurableLogDrainResponseBody$ {
    /** @deprecated use `CreateConfigurableLogDrainResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateConfigurableLogDrainResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateConfigurableLogDrainResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateConfigurableLogDrainResponseBody$Outbound, z.ZodTypeDef, CreateConfigurableLogDrainResponseBody>;
    /** @deprecated use `CreateConfigurableLogDrainResponseBody$Outbound` instead. */
    type Outbound = CreateConfigurableLogDrainResponseBody$Outbound;
}
export declare function createConfigurableLogDrainResponseBodyToJSON(createConfigurableLogDrainResponseBody: CreateConfigurableLogDrainResponseBody): string;
export declare function createConfigurableLogDrainResponseBodyFromJSON(jsonString: string): SafeParseResult<CreateConfigurableLogDrainResponseBody, SDKValidationError>;
//# sourceMappingURL=createconfigurablelogdrainop.d.ts.map