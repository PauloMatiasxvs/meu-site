import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetInvoiceRequest = {
    integrationConfigurationId: string;
    invoiceId: string;
};
export type GetInvoicePeriod = {
    start: string;
    end: string;
};
export type GetInvoiceItems = {
    billingPlanId: string;
    resourceId?: string | undefined;
    start?: string | undefined;
    end?: string | undefined;
    name: string;
    details?: string | undefined;
    price: string;
    quantity: number;
    units: string;
    total: string;
};
export type GetInvoiceDiscounts = {
    billingPlanId: string;
    resourceId?: string | undefined;
    start?: string | undefined;
    end?: string | undefined;
    name: string;
    details?: string | undefined;
    amount: string;
};
export declare const State: {
    readonly Pending: "pending";
    readonly Scheduled: "scheduled";
    readonly Invoiced: "invoiced";
    readonly Paid: "paid";
    readonly Notpaid: "notpaid";
    readonly RefundRequested: "refund_requested";
    readonly Refunded: "refunded";
};
export type State = ClosedEnum<typeof State>;
export type GetInvoiceResponseBody = {
    invoiceId: string;
    externalId?: string | undefined;
    invoiceNumber?: string | undefined;
    invoiceDate: string;
    period: GetInvoicePeriod;
    memo?: string | undefined;
    items: Array<GetInvoiceItems>;
    discounts?: Array<GetInvoiceDiscounts> | undefined;
    total: string;
    created: string;
    updated: string;
    state: State;
    refundReason?: string | undefined;
    refundTotal?: string | undefined;
    test: boolean;
};
/** @internal */
export declare const GetInvoiceRequest$inboundSchema: z.ZodType<GetInvoiceRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetInvoiceRequest$Outbound = {
    integrationConfigurationId: string;
    invoiceId: string;
};
/** @internal */
export declare const GetInvoiceRequest$outboundSchema: z.ZodType<GetInvoiceRequest$Outbound, z.ZodTypeDef, GetInvoiceRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetInvoiceRequest$ {
    /** @deprecated use `GetInvoiceRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetInvoiceRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetInvoiceRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetInvoiceRequest$Outbound, z.ZodTypeDef, GetInvoiceRequest>;
    /** @deprecated use `GetInvoiceRequest$Outbound` instead. */
    type Outbound = GetInvoiceRequest$Outbound;
}
export declare function getInvoiceRequestToJSON(getInvoiceRequest: GetInvoiceRequest): string;
export declare function getInvoiceRequestFromJSON(jsonString: string): SafeParseResult<GetInvoiceRequest, SDKValidationError>;
/** @internal */
export declare const GetInvoicePeriod$inboundSchema: z.ZodType<GetInvoicePeriod, z.ZodTypeDef, unknown>;
/** @internal */
export type GetInvoicePeriod$Outbound = {
    start: string;
    end: string;
};
/** @internal */
export declare const GetInvoicePeriod$outboundSchema: z.ZodType<GetInvoicePeriod$Outbound, z.ZodTypeDef, GetInvoicePeriod>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetInvoicePeriod$ {
    /** @deprecated use `GetInvoicePeriod$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetInvoicePeriod, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetInvoicePeriod$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetInvoicePeriod$Outbound, z.ZodTypeDef, GetInvoicePeriod>;
    /** @deprecated use `GetInvoicePeriod$Outbound` instead. */
    type Outbound = GetInvoicePeriod$Outbound;
}
export declare function getInvoicePeriodToJSON(getInvoicePeriod: GetInvoicePeriod): string;
export declare function getInvoicePeriodFromJSON(jsonString: string): SafeParseResult<GetInvoicePeriod, SDKValidationError>;
/** @internal */
export declare const GetInvoiceItems$inboundSchema: z.ZodType<GetInvoiceItems, z.ZodTypeDef, unknown>;
/** @internal */
export type GetInvoiceItems$Outbound = {
    billingPlanId: string;
    resourceId?: string | undefined;
    start?: string | undefined;
    end?: string | undefined;
    name: string;
    details?: string | undefined;
    price: string;
    quantity: number;
    units: string;
    total: string;
};
/** @internal */
export declare const GetInvoiceItems$outboundSchema: z.ZodType<GetInvoiceItems$Outbound, z.ZodTypeDef, GetInvoiceItems>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetInvoiceItems$ {
    /** @deprecated use `GetInvoiceItems$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetInvoiceItems, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetInvoiceItems$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetInvoiceItems$Outbound, z.ZodTypeDef, GetInvoiceItems>;
    /** @deprecated use `GetInvoiceItems$Outbound` instead. */
    type Outbound = GetInvoiceItems$Outbound;
}
export declare function getInvoiceItemsToJSON(getInvoiceItems: GetInvoiceItems): string;
export declare function getInvoiceItemsFromJSON(jsonString: string): SafeParseResult<GetInvoiceItems, SDKValidationError>;
/** @internal */
export declare const GetInvoiceDiscounts$inboundSchema: z.ZodType<GetInvoiceDiscounts, z.ZodTypeDef, unknown>;
/** @internal */
export type GetInvoiceDiscounts$Outbound = {
    billingPlanId: string;
    resourceId?: string | undefined;
    start?: string | undefined;
    end?: string | undefined;
    name: string;
    details?: string | undefined;
    amount: string;
};
/** @internal */
export declare const GetInvoiceDiscounts$outboundSchema: z.ZodType<GetInvoiceDiscounts$Outbound, z.ZodTypeDef, GetInvoiceDiscounts>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetInvoiceDiscounts$ {
    /** @deprecated use `GetInvoiceDiscounts$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetInvoiceDiscounts, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetInvoiceDiscounts$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetInvoiceDiscounts$Outbound, z.ZodTypeDef, GetInvoiceDiscounts>;
    /** @deprecated use `GetInvoiceDiscounts$Outbound` instead. */
    type Outbound = GetInvoiceDiscounts$Outbound;
}
export declare function getInvoiceDiscountsToJSON(getInvoiceDiscounts: GetInvoiceDiscounts): string;
export declare function getInvoiceDiscountsFromJSON(jsonString: string): SafeParseResult<GetInvoiceDiscounts, SDKValidationError>;
/** @internal */
export declare const State$inboundSchema: z.ZodNativeEnum<typeof State>;
/** @internal */
export declare const State$outboundSchema: z.ZodNativeEnum<typeof State>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace State$ {
    /** @deprecated use `State$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Pending: "pending";
        readonly Scheduled: "scheduled";
        readonly Invoiced: "invoiced";
        readonly Paid: "paid";
        readonly Notpaid: "notpaid";
        readonly RefundRequested: "refund_requested";
        readonly Refunded: "refunded";
    }>;
    /** @deprecated use `State$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Pending: "pending";
        readonly Scheduled: "scheduled";
        readonly Invoiced: "invoiced";
        readonly Paid: "paid";
        readonly Notpaid: "notpaid";
        readonly RefundRequested: "refund_requested";
        readonly Refunded: "refunded";
    }>;
}
/** @internal */
export declare const GetInvoiceResponseBody$inboundSchema: z.ZodType<GetInvoiceResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetInvoiceResponseBody$Outbound = {
    invoiceId: string;
    externalId?: string | undefined;
    invoiceNumber?: string | undefined;
    invoiceDate: string;
    period: GetInvoicePeriod$Outbound;
    memo?: string | undefined;
    items: Array<GetInvoiceItems$Outbound>;
    discounts?: Array<GetInvoiceDiscounts$Outbound> | undefined;
    total: string;
    created: string;
    updated: string;
    state: string;
    refundReason?: string | undefined;
    refundTotal?: string | undefined;
    test: boolean;
};
/** @internal */
export declare const GetInvoiceResponseBody$outboundSchema: z.ZodType<GetInvoiceResponseBody$Outbound, z.ZodTypeDef, GetInvoiceResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetInvoiceResponseBody$ {
    /** @deprecated use `GetInvoiceResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetInvoiceResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetInvoiceResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetInvoiceResponseBody$Outbound, z.ZodTypeDef, GetInvoiceResponseBody>;
    /** @deprecated use `GetInvoiceResponseBody$Outbound` instead. */
    type Outbound = GetInvoiceResponseBody$Outbound;
}
export declare function getInvoiceResponseBodyToJSON(getInvoiceResponseBody: GetInvoiceResponseBody): string;
export declare function getInvoiceResponseBodyFromJSON(jsonString: string): SafeParseResult<GetInvoiceResponseBody, SDKValidationError>;
//# sourceMappingURL=getinvoiceop.d.ts.map