/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Pagination$inboundSchema, Pagination$outboundSchema, } from "./pagination.js";
import { TeamLimited$inboundSchema, TeamLimited$outboundSchema, } from "./teamlimited.js";
/** @internal */
export const GetTeamsRequest$inboundSchema = z.object({
    limit: z.number().optional(),
    since: z.number().optional(),
    until: z.number().optional(),
});
/** @internal */
export const GetTeamsRequest$outboundSchema = z.object({
    limit: z.number().optional(),
    since: z.number().optional(),
    until: z.number().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetTeamsRequest$;
(function (GetTeamsRequest$) {
    /** @deprecated use `GetTeamsRequest$inboundSchema` instead. */
    GetTeamsRequest$.inboundSchema = GetTeamsRequest$inboundSchema;
    /** @deprecated use `GetTeamsRequest$outboundSchema` instead. */
    GetTeamsRequest$.outboundSchema = GetTeamsRequest$outboundSchema;
})(GetTeamsRequest$ || (GetTeamsRequest$ = {}));
export function getTeamsRequestToJSON(getTeamsRequest) {
    return JSON.stringify(GetTeamsRequest$outboundSchema.parse(getTeamsRequest));
}
export function getTeamsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetTeamsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetTeamsRequest' from JSON`);
}
/** @internal */
export const Teams$inboundSchema = z
    .union([TeamLimited$inboundSchema, z.record(z.any())]);
/** @internal */
export const Teams$outboundSchema = z.union([TeamLimited$outboundSchema, z.record(z.any())]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var Teams$;
(function (Teams$) {
    /** @deprecated use `Teams$inboundSchema` instead. */
    Teams$.inboundSchema = Teams$inboundSchema;
    /** @deprecated use `Teams$outboundSchema` instead. */
    Teams$.outboundSchema = Teams$outboundSchema;
})(Teams$ || (Teams$ = {}));
export function teamsToJSON(teams) {
    return JSON.stringify(Teams$outboundSchema.parse(teams));
}
export function teamsFromJSON(jsonString) {
    return safeParse(jsonString, (x) => Teams$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'Teams' from JSON`);
}
/** @internal */
export const GetTeamsResponseBody$inboundSchema = z.object({
    teams: z.array(z.union([TeamLimited$inboundSchema, z.record(z.any())])),
    pagination: Pagination$inboundSchema,
});
/** @internal */
export const GetTeamsResponseBody$outboundSchema = z.object({
    teams: z.array(z.union([TeamLimited$outboundSchema, z.record(z.any())])),
    pagination: Pagination$outboundSchema,
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var GetTeamsResponseBody$;
(function (GetTeamsResponseBody$) {
    /** @deprecated use `GetTeamsResponseBody$inboundSchema` instead. */
    GetTeamsResponseBody$.inboundSchema = GetTeamsResponseBody$inboundSchema;
    /** @deprecated use `GetTeamsResponseBody$outboundSchema` instead. */
    GetTeamsResponseBody$.outboundSchema = GetTeamsResponseBody$outboundSchema;
})(GetTeamsResponseBody$ || (GetTeamsResponseBody$ = {}));
export function getTeamsResponseBodyToJSON(getTeamsResponseBody) {
    return JSON.stringify(GetTeamsResponseBody$outboundSchema.parse(getTeamsResponseBody));
}
export function getTeamsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => GetTeamsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'GetTeamsResponseBody' from JSON`);
}
//# sourceMappingURL=getteamsop.js.map