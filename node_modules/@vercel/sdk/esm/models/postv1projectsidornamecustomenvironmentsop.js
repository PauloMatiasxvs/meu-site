/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
/**
 * Type of matcher. One of \"equals\", \"startsWith\", or \"endsWith\".
 */
export const PostV1ProjectsIdOrNameCustomEnvironmentsType = {
    Equals: "equals",
    StartsWith: "startsWith",
    EndsWith: "endsWith",
};
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema = z
    .nativeEnum(PostV1ProjectsIdOrNameCustomEnvironmentsType);
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1ProjectsIdOrNameCustomEnvironmentsType$;
(function (PostV1ProjectsIdOrNameCustomEnvironmentsType$) {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsType$.inboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsType$.outboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema;
})(PostV1ProjectsIdOrNameCustomEnvironmentsType$ || (PostV1ProjectsIdOrNameCustomEnvironmentsType$ = {}));
/** @internal */
export const BranchMatcher$inboundSchema = z.object({
    type: PostV1ProjectsIdOrNameCustomEnvironmentsType$inboundSchema,
    pattern: z.string(),
});
/** @internal */
export const BranchMatcher$outboundSchema = z.object({
    type: PostV1ProjectsIdOrNameCustomEnvironmentsType$outboundSchema,
    pattern: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var BranchMatcher$;
(function (BranchMatcher$) {
    /** @deprecated use `BranchMatcher$inboundSchema` instead. */
    BranchMatcher$.inboundSchema = BranchMatcher$inboundSchema;
    /** @deprecated use `BranchMatcher$outboundSchema` instead. */
    BranchMatcher$.outboundSchema = BranchMatcher$outboundSchema;
})(BranchMatcher$ || (BranchMatcher$ = {}));
export function branchMatcherToJSON(branchMatcher) {
    return JSON.stringify(BranchMatcher$outboundSchema.parse(branchMatcher));
}
export function branchMatcherFromJSON(jsonString) {
    return safeParse(jsonString, (x) => BranchMatcher$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'BranchMatcher' from JSON`);
}
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema = z.object({
    slug: z.string().optional(),
    description: z.string().optional(),
    branchMatcher: z.lazy(() => BranchMatcher$inboundSchema).optional(),
    copyEnvVarsFrom: z.string().optional(),
});
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema = z.object({
    slug: z.string().optional(),
    description: z.string().optional(),
    branchMatcher: z.lazy(() => BranchMatcher$outboundSchema).optional(),
    copyEnvVarsFrom: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$;
(function (PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$) {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$.inboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$.outboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema;
})(PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$ || (PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$ = {}));
export function postV1ProjectsIdOrNameCustomEnvironmentsRequestBodyToJSON(postV1ProjectsIdOrNameCustomEnvironmentsRequestBody) {
    return JSON.stringify(PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema.parse(postV1ProjectsIdOrNameCustomEnvironmentsRequestBody));
}
export function postV1ProjectsIdOrNameCustomEnvironmentsRequestBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody' from JSON`);
}
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    RequestBody: z.lazy(() => PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$inboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        "RequestBody": "requestBody",
    });
});
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema = z.object({
    idOrName: z.string(),
    teamId: z.string().optional(),
    slug: z.string().optional(),
    requestBody: z.lazy(() => PostV1ProjectsIdOrNameCustomEnvironmentsRequestBody$outboundSchema).optional(),
}).transform((v) => {
    return remap$(v, {
        requestBody: "RequestBody",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1ProjectsIdOrNameCustomEnvironmentsRequest$;
(function (PostV1ProjectsIdOrNameCustomEnvironmentsRequest$) {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsRequest$.inboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsRequest$.outboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema;
})(PostV1ProjectsIdOrNameCustomEnvironmentsRequest$ || (PostV1ProjectsIdOrNameCustomEnvironmentsRequest$ = {}));
export function postV1ProjectsIdOrNameCustomEnvironmentsRequestToJSON(postV1ProjectsIdOrNameCustomEnvironmentsRequest) {
    return JSON.stringify(PostV1ProjectsIdOrNameCustomEnvironmentsRequest$outboundSchema.parse(postV1ProjectsIdOrNameCustomEnvironmentsRequest));
}
export function postV1ProjectsIdOrNameCustomEnvironmentsRequestFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1ProjectsIdOrNameCustomEnvironmentsRequest$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostV1ProjectsIdOrNameCustomEnvironmentsRequest' from JSON`);
}
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema = z.object({});
/** @internal */
export const PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export var PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$;
(function (PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$) {
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$.inboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema;
    /** @deprecated use `PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema` instead. */
    PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$.outboundSchema = PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema;
})(PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$ || (PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$ = {}));
export function postV1ProjectsIdOrNameCustomEnvironmentsResponseBodyToJSON(postV1ProjectsIdOrNameCustomEnvironmentsResponseBody) {
    return JSON.stringify(PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$outboundSchema.parse(postV1ProjectsIdOrNameCustomEnvironmentsResponseBody));
}
export function postV1ProjectsIdOrNameCustomEnvironmentsResponseBodyFromJSON(jsonString) {
    return safeParse(jsonString, (x) => PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody$inboundSchema.parse(JSON.parse(x)), `Failed to parse 'PostV1ProjectsIdOrNameCustomEnvironmentsResponseBody' from JSON`);
}
//# sourceMappingURL=postv1projectsidornamecustomenvironmentsop.js.map