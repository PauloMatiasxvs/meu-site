import * as z from "zod";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./sdkvalidationerror.js";
export type GetConfigurableLogDrainRequest = {
    id: string;
    /**
     * The Team identifier to perform the request on behalf of.
     */
    teamId?: string | undefined;
    /**
     * The Team slug to perform the request on behalf of.
     */
    slug?: string | undefined;
};
export declare const GetConfigurableLogDrainDeliveryFormat: {
    readonly Json: "json";
    readonly Ndjson: "ndjson";
    readonly Syslog: "syslog";
};
export type GetConfigurableLogDrainDeliveryFormat = ClosedEnum<typeof GetConfigurableLogDrainDeliveryFormat>;
export declare const GetConfigurableLogDrainSources: {
    readonly Build: "build";
    readonly Edge: "edge";
    readonly Lambda: "lambda";
    readonly Static: "static";
    readonly External: "external";
    readonly Firewall: "firewall";
};
export type GetConfigurableLogDrainSources = ClosedEnum<typeof GetConfigurableLogDrainSources>;
export declare const GetConfigurableLogDrainEnvironments: {
    readonly Production: "production";
    readonly Preview: "preview";
};
export type GetConfigurableLogDrainEnvironments = ClosedEnum<typeof GetConfigurableLogDrainEnvironments>;
export declare const GetConfigurableLogDrainStatus: {
    readonly Enabled: "enabled";
    readonly Disabled: "disabled";
    readonly Errored: "errored";
};
export type GetConfigurableLogDrainStatus = ClosedEnum<typeof GetConfigurableLogDrainStatus>;
export declare const DisabledReason: {
    readonly DisabledByOwner: "disabled-by-owner";
    readonly FeatureNotAvailable: "feature-not-available";
    readonly AccountPlanDowngrade: "account-plan-downgrade";
    readonly DisabledByAdmin: "disabled-by-admin";
};
export type DisabledReason = ClosedEnum<typeof DisabledReason>;
export declare const GetConfigurableLogDrainCreatedFrom: {
    readonly SelfServed: "self-served";
};
export type GetConfigurableLogDrainCreatedFrom = ClosedEnum<typeof GetConfigurableLogDrainCreatedFrom>;
export type GetConfigurableLogDrainResponseBody = {
    id: string;
    deliveryFormat: GetConfigurableLogDrainDeliveryFormat;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<GetConfigurableLogDrainSources> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<GetConfigurableLogDrainEnvironments>;
    status?: GetConfigurableLogDrainStatus | undefined;
    disabledAt?: number | undefined;
    disabledReason?: DisabledReason | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    secret: string;
    createdFrom?: GetConfigurableLogDrainCreatedFrom | undefined;
};
/** @internal */
export declare const GetConfigurableLogDrainRequest$inboundSchema: z.ZodType<GetConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetConfigurableLogDrainRequest$Outbound = {
    id: string;
    teamId?: string | undefined;
    slug?: string | undefined;
};
/** @internal */
export declare const GetConfigurableLogDrainRequest$outboundSchema: z.ZodType<GetConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, GetConfigurableLogDrainRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainRequest$ {
    /** @deprecated use `GetConfigurableLogDrainRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetConfigurableLogDrainRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetConfigurableLogDrainRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetConfigurableLogDrainRequest$Outbound, z.ZodTypeDef, GetConfigurableLogDrainRequest>;
    /** @deprecated use `GetConfigurableLogDrainRequest$Outbound` instead. */
    type Outbound = GetConfigurableLogDrainRequest$Outbound;
}
export declare function getConfigurableLogDrainRequestToJSON(getConfigurableLogDrainRequest: GetConfigurableLogDrainRequest): string;
export declare function getConfigurableLogDrainRequestFromJSON(jsonString: string): SafeParseResult<GetConfigurableLogDrainRequest, SDKValidationError>;
/** @internal */
export declare const GetConfigurableLogDrainDeliveryFormat$inboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainDeliveryFormat>;
/** @internal */
export declare const GetConfigurableLogDrainDeliveryFormat$outboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainDeliveryFormat>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainDeliveryFormat$ {
    /** @deprecated use `GetConfigurableLogDrainDeliveryFormat$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
    /** @deprecated use `GetConfigurableLogDrainDeliveryFormat$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Json: "json";
        readonly Ndjson: "ndjson";
        readonly Syslog: "syslog";
    }>;
}
/** @internal */
export declare const GetConfigurableLogDrainSources$inboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainSources>;
/** @internal */
export declare const GetConfigurableLogDrainSources$outboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainSources>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainSources$ {
    /** @deprecated use `GetConfigurableLogDrainSources$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
    /** @deprecated use `GetConfigurableLogDrainSources$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Build: "build";
        readonly Edge: "edge";
        readonly Lambda: "lambda";
        readonly Static: "static";
        readonly External: "external";
        readonly Firewall: "firewall";
    }>;
}
/** @internal */
export declare const GetConfigurableLogDrainEnvironments$inboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainEnvironments>;
/** @internal */
export declare const GetConfigurableLogDrainEnvironments$outboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainEnvironments>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainEnvironments$ {
    /** @deprecated use `GetConfigurableLogDrainEnvironments$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
    /** @deprecated use `GetConfigurableLogDrainEnvironments$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Production: "production";
        readonly Preview: "preview";
    }>;
}
/** @internal */
export declare const GetConfigurableLogDrainStatus$inboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainStatus>;
/** @internal */
export declare const GetConfigurableLogDrainStatus$outboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainStatus$ {
    /** @deprecated use `GetConfigurableLogDrainStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
    /** @deprecated use `GetConfigurableLogDrainStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Enabled: "enabled";
        readonly Disabled: "disabled";
        readonly Errored: "errored";
    }>;
}
/** @internal */
export declare const DisabledReason$inboundSchema: z.ZodNativeEnum<typeof DisabledReason>;
/** @internal */
export declare const DisabledReason$outboundSchema: z.ZodNativeEnum<typeof DisabledReason>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace DisabledReason$ {
    /** @deprecated use `DisabledReason$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
    /** @deprecated use `DisabledReason$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly DisabledByOwner: "disabled-by-owner";
        readonly FeatureNotAvailable: "feature-not-available";
        readonly AccountPlanDowngrade: "account-plan-downgrade";
        readonly DisabledByAdmin: "disabled-by-admin";
    }>;
}
/** @internal */
export declare const GetConfigurableLogDrainCreatedFrom$inboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainCreatedFrom>;
/** @internal */
export declare const GetConfigurableLogDrainCreatedFrom$outboundSchema: z.ZodNativeEnum<typeof GetConfigurableLogDrainCreatedFrom>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainCreatedFrom$ {
    /** @deprecated use `GetConfigurableLogDrainCreatedFrom$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
    }>;
    /** @deprecated use `GetConfigurableLogDrainCreatedFrom$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly SelfServed: "self-served";
    }>;
}
/** @internal */
export declare const GetConfigurableLogDrainResponseBody$inboundSchema: z.ZodType<GetConfigurableLogDrainResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetConfigurableLogDrainResponseBody$Outbound = {
    id: string;
    deliveryFormat: string;
    url: string;
    name: string;
    clientId?: string | undefined;
    configurationId?: string | undefined;
    teamId?: string | null | undefined;
    ownerId: string;
    projectIds?: Array<string> | undefined;
    createdAt: number;
    deletedAt: number | null;
    updatedAt: number;
    sources?: Array<string> | undefined;
    headers?: {
        [k: string]: string;
    } | undefined;
    environments: Array<string>;
    status?: string | undefined;
    disabledAt?: number | undefined;
    disabledReason?: string | undefined;
    disabledBy?: string | undefined;
    firstErrorTimestamp?: number | undefined;
    samplingRate?: number | undefined;
    hideIpAddresses?: boolean | undefined;
    secret: string;
    createdFrom?: string | undefined;
};
/** @internal */
export declare const GetConfigurableLogDrainResponseBody$outboundSchema: z.ZodType<GetConfigurableLogDrainResponseBody$Outbound, z.ZodTypeDef, GetConfigurableLogDrainResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetConfigurableLogDrainResponseBody$ {
    /** @deprecated use `GetConfigurableLogDrainResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetConfigurableLogDrainResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetConfigurableLogDrainResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetConfigurableLogDrainResponseBody$Outbound, z.ZodTypeDef, GetConfigurableLogDrainResponseBody>;
    /** @deprecated use `GetConfigurableLogDrainResponseBody$Outbound` instead. */
    type Outbound = GetConfigurableLogDrainResponseBody$Outbound;
}
export declare function getConfigurableLogDrainResponseBodyToJSON(getConfigurableLogDrainResponseBody: GetConfigurableLogDrainResponseBody): string;
export declare function getConfigurableLogDrainResponseBodyFromJSON(jsonString: string): SafeParseResult<GetConfigurableLogDrainResponseBody, SDKValidationError>;
//# sourceMappingURL=getconfigurablelogdrainop.d.ts.map